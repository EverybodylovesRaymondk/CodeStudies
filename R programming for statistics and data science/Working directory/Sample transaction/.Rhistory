year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
my.data <- data.frame(title, year, length.min , box.office.mil)
my.data
#renaming coloumns
name(my.data)<-c("Movie Title","Year","Lengh in Minutes","Box Officee")
my.data
my.data <- data.frame(title, year, length.min , box.office.mil)
my.data
#renaming coloumns
names(my.data)<-c("Movie Title","Year","Lengh in Minutes","Box Office")
my.data
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil)
my.data
#renaming coloumns
names(my.data)<-c("Movie Title","Year","Lengh in Minutes","Box Office")
my.data
str(my.data)
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data
str(my.data)
ploy(my.data)
plot(my.data)
plot(my.data)
x<- c(1:12)
y<-c(12:24)
new.data<-data.frame(x,y)
y<-c(12:25)
new.data<-data.frame(x,y)
y<-c(12:23)
new.data<-data.frame(x,y)
plot(new.data)
x<- c(0:12)
y<-c(12:24)
new.data<-data.frame(x,y)
plot(new.data)
plot.new(new.data)
str(my.data)
my.data
View(my.data)
View(my.data)
View(my.data)
library(readxl)
RPLAY <- read_excel("C:/Users/raymondk/Desktop/Temp/RPLAY.xlsx")
View(RPLAY)
RPLAY
View(RPLAY)
View(RPLAY)
View(RPLAY)
#To create a dataframe you need
#Vectors of equal lenght
# data.frame() function
title<-c("Star Wars","The Empire Strikes Back","Return of the Jedi",
"The Phantom Menace","Attack of the Clones","Revenge of the Sith",
"The Force Awakens")
year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
#Nameing coloumns when createing the data frame
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data
#renaming coloumns
names(my.data)<-c("Movie Title","Year","Lengh in Minutes","Box Office")
my.data
str(my.data)
sa
str(my.data)
#To create a dataframe you need
#Vectors of equal lenght
# data.frame() function
title<-c("Star Wars","The Empire Strikes Back","Return of the Jedi",
"The Phantom Menace","Attack of the Clones","Revenge of the Sith",
"The Force Awakens")
year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
#Nameing coloumns when createing the data frame
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data
#renaming coloumns
names(my.data)<-c("Movie Title","Year","Lengh in Minutes","Box Office")
my.data
str(my.data)
AirPassengers
summary(AirPassengers)
data()
AirPassengers
my.data <-AirPassengers
my.data
my.data<-c("Star Wars","The Empire Strikes Back","Return of the Jedi",
"The Phantom Menace","Attack of the Clones","Revenge of the Sith",
"The Force Awakens")
year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data
#adding columns (Variables) to the data frame
#Create columns and values
mark<-c(37.5,34.75,34.25,0,0,0.75,0)
carrie<-c(13.5,22.75,21.25,0,0,0.5,5.75)
#Adding columns to data frame with cbind will allow you to add multiple columns in the same line
my.data <- cbind(my.data,MarkScreenTime=mark,CarryScreenTime=carrie)
my.data
str(my.data)
View(my.data)
my.data<-c("Star Wars","The Empire Strikes Back","Return of the Jedi",
"The Phantom Menace","Attack of the Clones","Revenge of the Sith",
"The Force Awakens")
year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data
#adding columns (Variables) to the data frame
#Create columns and values
mark<-c(37.5,34.75,34.25,0,0,0.75,0)
carrie<-c(13.5,22.75,21.25,0,0,0.5,5.75)
#adding columns using the square brackets
my.data[["MarkScreenTime"]] <- mark
my.data[["CarrieScreenTime"]]<-carrie
my.data
my.data<-c("Star Wars","The Empire Strikes Back","Return of the Jedi",
"The Phantom Menace","Attack of the Clones","Revenge of the Sith",
"The Force Awakens")
year<-c(1997,1980,1983,1999,2002,2005,2015)
length.min<-c(121,124,133,133,142,140,135)
box.office.mil<-c(787,534,572,1027,657,849,2059)
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = F)
my.data <- data.frame("Movie title" = title,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = FALSE)
my.data <- data.frame("Movie title" = my.data,"Year"= year,"Lenght in minutes"= length.min ,"Gross"= box.office.mil,stringsAsFactors = FALSE)
my.data
#adding columns (Variables) to the data frame
#Create columns and values
mark<-c(37.5,34.75,34.25,0,0,0.75,0)
carrie<-c(13.5,22.75,21.25,0,0,0.5,5.75)
#Adding columns to data frame with cbind will allow you to add multiple columns in the same line
my.data <- cbind(my.data,MarkScreenTime=mark,CarryScreenTime=carrie)
my.data
str(my.data)
#Adding rows(observations) to the data frame
#You will have to create a small data frame by itself because vectors like mark ect can only have values of the same type
#It is important to name the elements the same as the columns they will be placed into.
rougeOne <-data.frame(Movie.title="Roage One",Year=2016,Lenght.in.minutes=133,
Gross =1051,MarkScreenTime=0,CarryScreenTime=0.25)
#Binding the row to the data frame
rbind(my.data,rougeOne)
my.data
#Binding the row to the data frame
rbind(my.data,rougeOne)
my.data
View(my.data)
View(my.data)
#Adding rows(observations) to the data frame
#You will have to create a small data frame by itself because vectors like mark ect can only have values of the same type
#It is important to name the elements the same as the columns they will be placed into.
rougeOne <-data.frame(Movie.title="Roage One",Year=2016,Lenght.in.minutes=133,
Gross =1051,MarkScreenTime=0,CarryScreenTime=0.25)
#Adding rows(observations) to the data frame
#You will have to create a small data frame by itself because vectors like mark ect can only have values of the same type
#It is important to name the elements the same as the columns they will be placed into.
rougeOne <-data.frame(my.data="Roage One",Year=2016,Lenght.in.minutes=133,
Gross =1051,MarkScreenTime=0,CarryScreenTime=0.25)
#Binding the row to the data frame
rbind(my.data,rougeOne)
str(my.data)
#Adding rows(observations) to the data frame
#You will have to create a small data frame by itself because vectors like mark ect can only have values of the same type
#It is important to name the elements the same as the columns they will be placed into.
rougeOne <-data.frame(Movie.title="Roage One",Year=2016, Lenght.in.minutes=133,
Gross =1051,MarkScreenTime=0,CarryScreenTime=0.25)
#Binding the row to the data frame
rbind(my.data,rougeOne)
my.data
#Adding rows(observations) to the data frame
#You will have to create a small data frame by itself because vectors like mark ect can only have values of the same type
#It is important to name the elements the same as the columns they will be placed into.
rougeOne <-data.frame(Movie.title="Roage One",Year=2016, Lenght.in.minutes=133,
Gross =1051,MarkScreenTime=0,CarryScreenTime=0.25)
#Binding the row to the data frame
rbind(my.data,rougeOne)
my.data
#Binding the row to the data frame
rbind(my.data,rougeOne)
my.data
#Binding the row to the data frame
new.data <- rbind(my.data,rougeOne)
new.data
View(new.data)
View(new.data)
summary(new.data)
library(tidyverse)
ggplot(new.data)
ggplot(new.data[,3])
ggplot(new.data[1,3])
ggplot(new.data[[1,3])
data()
pets
name<-c("Flipper","Bromley","Nox","Orion","Dagger","Zizi","Carrie")
Months.old<-c(53,19,34,41,84,140,109)
Name<-c("Flipper","Bromley","Nox","Orion","Dagger","Zizi","Carrie")
Months.old<-c(53,19,34,41,84,140,109)
Size
Name<-c("Flipper","Bromley","Nox","Orion","Dagger","Zizi","Carrie")
Months.old<-c(53,19,34,41,84,140,109)
Size<-c("meduim","small","meduim","Large","small","extra small","large")
Weight<-c(21,8,4,6,7,2,36)
Breed<-c("dog","dog","cat","cat","dog","cat","dog")
pets<-data.frame("Name"=Name,"Months old"=Months.old,"Size"=Size,"Weight (Kg)"=Weight,"Breed"=Breed , stringsAsFactors = F)
pets
pets<-data.frame("Name"=Name,"Months old"=Months.old,"Size"=Size,"Weight(Kg)"=Weight,"Breed"=Breed , stringsAsFactors = F)
pets
Vaccinated <-c("yes","yes","no","yes","no","no","yes",)
Vaccinated <-c("yes","yes","no","yes","no","no","yes")
cbind(pets,Vaccinated)
pets
pets<-cbind(pets,Vaccinated)
pets
pets<-cbind(pets,"Vaccinated"=Vaccinated)
pets
milo<-data.frame(Name="Milo",Months.old=67,Size="small",Weight=7,Breed="dog",Vaccinated="yes")
pets<- rbind(pets,milo)
pets
Name<-c("Flipper","Bromley","Nox","Orion","Dagger","Zizi","Carrie")
Months.old<-c(53,19,34,41,84,140,109)
Size<-c("meduim","small","meduim","Large","small","extra small","large")
Weight<-c(21,8,4,6,7,2,36)
Breed<-c("dog","dog","cat","cat","dog","cat","dog")
pets<-data.frame("Name"=Name,"Months old"=Months.old,"Size"=Size,"Weight(Kg)"=Weight,"Breed"=Breed , stringsAsFactors = F)
pets
Vaccinated <-c("yes","yes","no","yes","no","no","yes")
pets<-cbind(pets,"Vaccinated"=Vaccinated)
pets
milo<-data.frame(Name="Milo",Months.old=67,Size="small",Weight=7,Breed="dog",Vaccinated="yes")
pets<- rbind(pets,milo)
pets
milo<-data.frame(Name="Milo","Months old"=67,Size="small","Weight(Kg)"=7,Breed="dog",Vaccinated="yes")
pets<- rbind(pets,milo)
pets
#How many rows and columns does the data frame pets have
nrow(pets)
ncol(pets)
str(pets)
typeof(pets)
class(diamonds)
str(diamonds)
diamonds.df <- as data.frame(diamonds)
class(diamonds.df)
# alternatively
str(diamonds)
diamonds.df <- as.data.frame(diamonds)
class(diamonds.df)
str(USJudgeRatings)
my.df <- USJudgeRatings
my.df$AVRG <- rowMeans(my.df)
avrg <- my.df["AVRG"]
pets <- as data.frame(pets)
pets <- as.data.frame(pets)
pets.df <- as.data.frame(pets)
Name<-c("Flipper","Bromley","Nox","Orion","Dagger","Zizi","Carrie")
Months.old<-c(53,19,34,41,84,140,109)
Size<-c("meduim","small","meduim","Large","small","extra small","large")
Weight<-c(21,8,4,6,7,2,36)
Breed<-c("dog","dog","cat","cat","dog","cat","dog")
pets<-data.frame("Name"=Name,"Months old"=Months.old,"Size"=Size,"Weight(Kg)"=Weight,"Breed"=Breed , stringsAsFactors = F)
pets
#adding the Vaccinated column
Vaccinated <-c("yes","yes","no","yes","no","no","yes")
pets<-cbind(pets,"Vaccinated"=Vaccinated)
pets
# adding the milo observation(row)
milo<-data.frame(Name="Milo","Months old"=67,Size="small","Weight(Kg)"=7,Breed="dog",Vaccinated="yes")
pets<- rbind(pets,milo)
pets <- as.data.frame(pets)
#How many rows and columns does the data frame pets have
nrow(pets)
ncol(pets)
str(pets)
class(pets)
#Load the diamonds data set, check if it is a data frame and if not change it to one.
class(diamonds)
diamonds.df <- as data.frame(diamonds)
diamonds.df <- as.data.frame(diamonds)
class(diamonds.df)
diamonds.df
#Load the UsJudgeRatings data set, check the class , if not a data frame converti it to one
class(USJudgeRatings)
USJudgeRatings
my.df <- USJudgeRatings
my.df$AVRG <- rowMeans(my.df)
averg <- my.df["AVRG"]
averg
View(pets)
eg.na <-c(NA,1:10)
eg.na
mean(eg.na)
#Removing the NA values in the arithmatic
mean(eg.na, na.rm = T)
head(my.wars)
clase(starwars)
class(starwars)
my.wars < as.data.frame(starwars)
my.wars <- as.data.frame(starwars)
my.wars
#Finding out where the NA values are in a data frame
head(my.wars)
my.wars
my.wars
#Finding out where the NA values are in a data frame
is.na(my.wars)
View(my.wars)
View(my.wars)
View(my.wars)
View(my.wars)
any(is.na(my.wars))
#Checking a column or specific set of columns for NA values
any(is.na(my.wars$name))
any(is.na(my.wars[,c("name","homeworld","species")]))
View(my.wars)
View(my.wars)
#looking for the places where there are NA values in the following columns"name","homeworld","species"
(is.na(my.wars[,c("name","homeworld","species")]))
#Replacing NA values in the "species" column
my.wars$species[is.na(my.wars$species)]<- "Unknown"
subset(my.wars,species == "Unknown")
#Chaning missing numerical values with the median of the column
my.wars$height[is.na(my.wars$hight)]<- median(my.wars$height, na.rm = T)
my.wars$height
#Chaning missing numerical values with the median of the column
my.wars$height[is.na(my.wars$hight)]<- median(my.wars$height, na.rm = T)
#Chaning missing numerical values with the median of the column
my.wars$height[is.na(my.wars$height)]<- median(my.wars$height, na.rm = T)
my.wars$height
View(my.wars)
View(my.wars)
my.wars <- as.data.frame(starwars)
#Checking a column or specific set of columns for NA values
any(is.na(my.wars$species)) # will return true if there are NA values in the name column
name
#Checking a column or specific set of columns for NA values
any(is.na(my.wars$name)) # will return true if there are NA values in the name column
head(my.wars)
class(starwars)
my.wars <- as.data.frame(starwars)
my.wars
any(is."Unknown"(my.wars$species))
eg.na <-c(NA,1:10)
eg.na
mean(eg.na)
#Removing the NA values in the arithmatic
mean(eg.na, na.rm = T)
head(my.wars)
my.wars <- as.data.frame(starwars)
class(starwars)
starwars
data()
library(tidyverse)
class(starwars)
my.wars <- as.data.frame(starwars)
my.wars
head(my.wars)
View(my.wars)
View(my.wars)
any(is.na(my.wars[,c("name","homeworld","species")])) # returns true if there are NA vaues in the following columns"name","homeworld","species"
#Replacing NA values in the "species" column
my.wars$species[is.na(my.wars$species)]<- "Unknown"
subset(my.wars,species == "Unknown")
my.wars <- as.data.frame(starwars)
#Chaning missing numerical values with the median of the column
my.wars$birth_year[is.na(my.wars$birth_year)]<- median(my.wars$birth_year, na.rm = T)
my.wars <- as.data.frame(starwars)
get wd()
getwd()
source('~/.active-rstudio-document', echo=TRUE)
cor(homes$Structure.Cost,homes$Land.Value)
homes<-as.tibble(read.csv("landdata-states.csv",stringsAsFactors = F))
homes<-as.tibble(read.csv("landdata-states.csv",stringsAsFactors = F))
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/")
library(tidyverse)
library(psych)
dates <-data.frame(read.csv("Raymond data mockup Slide 8 of powerpoint.csv",stringsAsFactors = F,header = T))
dates <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
setwd("C:/Users/raymondk/Desktop/Study/R programming for statistics and data science/Working directory/Sample transaction")
dates <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
Transdates
Transdata
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
View(Transdata)
BP<-ggplot(Transdata)
str(Transdata)
sc<-ggplot(Transdata,aes(Transdata$Date,Transdata$Moc.doctype))
sc+geom_bar()
sc+geom_bar(aes(color=Transdata$Moc.doctype),size=3)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
str(Transdata)
str(Transdata)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
str(Transdata)
View(Transdata)
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL))
#creating the bar chart polt
bar + geom_bar() + theme_dark()+
#labeling the y,x and title of the plot
#Splitting the plot by sex and passenger class
facet_wrap(Transdata$Moc.doctype)
#creating the bar chart polt
bar + geom_bar() + theme_dark()
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL , fill=Transdata$Moc.doctype)
#creating the bar chart polt
bar + geom_bar() + theme_dark()
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL , fill=Transdata$Moc.doctype)+
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL , fill=Transdata$Moc.doctype)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = T,header = T))
str(Transdata)
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL , fill=Transdata$Moc.doctype)
bar + geom_bar() + theme_dark()
bar<-ggplot(Transdata,aes(x=Transdata$Date, y=Transdata$GRANDTOTAL , fill=Transdata$Moc.doctype)+
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date,y=Transdata$GRANDTOTAL,fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date,y=Transdata$GRANDTOTAL))
TransdataPlot + geom_bar()+theme_dark()
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T))
str(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date,y=Transdata$GRANDTOTAL))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, Y = Transdata$QTYENTERED))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date,Y=sum(Transdata$GRANDTOTAL) fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
View(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Time,Y=sum(Transdata$GRANDTOTAL) fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Date)
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Time)
Date
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, fill=Transdata$Moc.doctype))+
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot + geom_bar()+theme_dark()+facet_grid(Transdata$Moc.doctype)
TransdataPlot + geom_bar()+theme_dark()+facet_grid(Transdata$Moc.doctype.id)
TransdataPlot + geom_bar()+theme_dark()+
facet_grid(Transdata$Moc.doctype.id , Transdata$Date)
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Moc.doctype.id)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, y=sum(Transdata$GRANDTOTAL) fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Moc.doctype.id)
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Time)
TransdataPlot + geom_bar()+theme_dark()+
facet_wrap(Transdata$Time~time())
source('~/.active-rstudio-document', echo=TRUE)
TransdataPlot + geom_bar()+theme_dark()
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T, skip = 400))
str(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, y=sum(Transdata$GRANDTOTAL)
fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,))
str(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, y=sum(Transdata$GRANDTOTAL)
fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
nrow(Transdata)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,skip = 650))
str(Transdata)
nrow(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, y=sum(Transdata$GRANDTOTAL)
fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,skipNul = 600))
str(Transdata)
nrow(Transdata)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,skip = 600))
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = F,skip = 600))
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,)
nrow(Transdata)
TransdataPlot <- ggplot(Transdata,aes(x=Transdata$Date, y=sum(Transdata$GRANDTOTAL)
fill=Transdata$Moc.doctype))
TransdataPlot + geom_bar()+theme_dark()+
stat_smooth()
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,)
nrow(Transdata)
Transdata <-data.frame(read.csv("Data.csv",stringsAsFactors = F,header = T,))
str(Transdata)
nrow(Transdata)
TransdataPlot + geom_bar()+theme_dark()+
stat_smooth()
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot + geom_boxplot()+theme_dark()
TransdataPlot + geom_histogram()+theme_dark()
TransdataPlot + geom_bar()+theme_dark()
TransdataPlot + geom_bar()+theme_dark()+
facet_grid(Transdata$Date)
TransdataPlot + geom_bar()+theme_dark()+
facet_grid(Transdata$Date)
TransdataPlot + geom_bar()+theme_dark()+
facet_grid(Transdata$ICE_SERVICENAME)
TransdataPlot + geom_bar()+theme_dark()+
facet_grid(Transdata$Moc.doctype.id)
